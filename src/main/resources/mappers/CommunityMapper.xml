<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.llm.llm_knowledge.mapper.CommunityMapper">

    <!--    查询已经审核的-->
    <select id="selectCommunitiesWithFilters" resultType="com.llm.llm_knowledge.dto.CommunityDTO">
        SELECT
        cmn.community_id,
        cmn.community_name,
        cmn.community_description,
        `user`.user_name,
        cg.category_name,
        cmn.community_image_url,
        cmn.created_time,
        cmn.updated_time
        FROM community AS cmn
        INNER JOIN category AS cg ON cmn.category_id = cg.category_id
        INNER JOIN user_info AS `user` ON cmn.created_by = `user`.user_id
        <where>
            <if test="categoryName != null and categoryName != ''">
                AND cg.category_name LIKE CONCAT('%', #{categoryName}, '%')
            </if>
            <if test="communityName != null and communityName != ''">
                AND cmn.community_name LIKE CONCAT('%', #{communityName}, '%')
            </if>
            <if test="userName != null and userName != ''">
                AND `user`.user_name LIKE CONCAT('%', #{userName}, '%')
            </if>
            <if test="communityDescription !=null and communityDescription != ''">
                AND cmn.community_description LIKE CONCAT( '%', #{communityDescription}, '%' )
            </if>
            <if test="popular != null">
                AND cmn.popular = #{popular}
            </if>
            AND cmn.community_underview = 1
        </where>
        ORDER BY cmn.created_time DESC
    </select>

    <!--    查看未审核的-->
    <select id="selectCommunitiesWithFilters2" resultType="com.llm.llm_knowledge.dto.CommunityDTO">
        SELECT
        cmn.community_id,
        cmn.community_name,
        cmn.community_description,
        `user`.user_name,
        cg.category_name,
        cmn.community_underview,
        cmn.community_image_url,
        cmn.created_time,
        cmn.updated_time
        FROM community AS cmn
        INNER JOIN category AS cg ON cmn.category_id = cg.category_id
        INNER JOIN user_info AS `user` ON cmn.created_by = `user`.user_id
        <where>
            <if test="categoryName != null and categoryName != ''">
                AND cg.category_name LIKE CONCAT('%', #{categoryName}, '%')
            </if>
            <if test="communityName != null and communityName != ''">
                AND cmn.community_name LIKE CONCAT('%', #{communityName}, '%')
            </if>
            <if test="userName != null and userName != ''">
                AND `user`.user_name LIKE CONCAT('%', #{userName}, '%')
            </if>
            <if test="communityDescription !=null and communityDescription != ''">
                AND cmn.community_description LIKE CONCAT( '%', #{communityDescription}, '%' )
            </if>
            AND cmn.community_underview = 0
        </where>
        ORDER BY cmn.created_time DESC
    </select>


    <select id="selectCommunityUsersWithPostCount" resultType="com.llm.llm_knowledge.dto.UserPostCountDTO">
        SELECT
        ui.user_id,
        ui.user_name AS username,
        ui.user_age,
        ui.user_local,
        ui.user_bio,
        ui.user_email,
        COUNT(p.post_id) AS post_count
        FROM
        community_join AS cj
        JOIN
        user_info AS ui ON cj.user_id = ui.user_id
        LEFT JOIN
        post AS p ON cj.user_id = p.user_id AND cj.community_id = p.community_id
        <where>
            cj.community_id = #{communityId}
        </where>
        GROUP BY
        ui.user_id
        ORDER BY
        ui.user_name
    </select>


    <update id="updateUserScoreForLogin" parameterType="map">
        <![CDATA[
            UPDATE user_community_score
            SET score = score + 3
            WHERE user_id = #{userId}
            AND community_id = #{communityId};
        ]]>
    </update>



    <update id="insertUserCommunityScoreIfNotExist" parameterType="map">
        <![CDATA[
            INSERT INTO user_community_score (user_id, community_id, score,created_time,updated_time)
            SELECT #{userId}, #{communityId}, 0 , NOW(), NOW()
            WHERE NOT EXISTS (
            SELECT 1 FROM user_community_score WHERE user_id = #{userId} AND community_id = #{communityId}
        );
        ]]>
    </update>

    <select id="checkCommuniutyScore" resultType="com.llm.llm_knowledge.dto.UserCommunityScoreDTO">
        SELECT
        ucs.*,
        ui.user_name
        FROM
        user_community_score AS ucs
        INNER JOIN
        user_info AS ui ON ucs.user_id = ui.user_id
        <where>
            <if test="communityId != null and community != ''">
                AND community_id = #{communityId}
            </if>
        </where>
        ORDER BY ucs.score DESC
    </select>


    <!--根据父id查出子id-->
    <select id="getChildByParent">
        Select
            category.category_id
        FROM
            category
        WHERE
            parent_id = #{parentId}
    </select>


    <!--根据子id来查社区-->
    <select id="getCmnByIds">
        SELECT
            *
        FROM
            community
        WHERE
            category_id = #{childId}
    </select>

</mapper>
