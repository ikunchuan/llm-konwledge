<?xml version="1.0" encoding="UTF-8" ?>
        <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.llm.llm_knowledge.mapper.CompetitionMapper">

    <select id="selectCompetitionWithFilters" resultType="com.llm.llm_knowledge.dto.CompetitionDTO">
        SELECT
        cg.category_name,
        cp.competition_id,
        cp.competition_img_url,
        cp.competition_name,
        cp.competition_status,
        cp.created_time,
        cp.updated_time,
        cp.is_active,
        cp.level_name,
        cpd.start_date,
        cpd.end_date
        FROM
        competition AS cp
        INNER JOIN category AS cg ON cp.category_id = cg.category_id
        INNER JOIN competition_detail AS cpd ON cp.competition_id = cpd.competition_id

        <where>
            <if test="competitionName != null and competitionName != ''">
                AND cp.competition_name LIKE CONCAT('%', #{competitionName}, '%')
            </if>
            <if test="categoryId != null">
                AND cp.category_id = #{categoryId}
            </if>

            <if test="isActive != null">
                AND cp.is_active = #{isActive}
            </if>
            <if test="popular != null">
                AND cp.popular = #{popular}
            </if>
            <if test="startDate != null and endDate != null">
                <!-- 比赛时间与前端时间段有交集 -->
                AND (
                (cpd.start_date &lt;= #{endDate} AND cpd.end_date &gt;= #{startDate})
                )
            </if>
        </where>
        ORDER BY cp.created_time DESC
    </select>





    <!--用户收藏竞赛后会在竞赛收藏表增加一条点赞记录-->
    <!--插入新记录-->
    <insert id="addCompetitionFavorite" parameterType="map" >
        INSERT INTO competition_favorite (user_id, competition_id,updated_time,deleted)
        VALUES (#{userId}, #{competitionId}, CURRENT_TIMESTAMP, 0)
    </insert>
    <!--查询记录-->
    <select id="searchCompetitionFavorite" parameterType="map" resultType="com.llm.llm_knowledge.entity.CompetitionFavorite">
        SELECT * FROM competition_favorite WHERE user_id = #{userId} AND competition_id = #{competitionId}
    </select>


    <!--根据父id查出子id-->
    <select id="getChildByParent">
        Select
        category.category_id
        FROM
        category
        WHERE
        parent_id = #{parentId}
    </select>


    <!--根据子id来查竞赛-->
    <select id="getCompeByIds">
        SELECT
        *
        FROM
        competition
        WHERE
        category_id = #{childId}
    </select>


    <!--更新记录-->
    <update id="updateFavoriteStatus" parameterType="map">
        UPDATE competition_favorite
        SET deleted = CASE
                          WHEN deleted = 0 THEN 1   -- 如果当前是收藏（deleted=0），则取消收藏（设置为1）
                          WHEN deleted = 1 THEN 0   -- 如果当前是取消收藏（deleted=1），则恢复收藏（设置为0）
            END,
            updated_time = CURRENT_TIMESTAMP  -- 更新竞赛收藏时间
        WHERE user_id = #{userId} AND competition_id = #{competitionId};
    </update>




</mapper>
